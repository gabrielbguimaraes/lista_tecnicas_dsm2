
C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\BACKEND\OI.TS CODE IS BELOW


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\BACKEND\OUT\OI.JS CODE IS BELOW
"use strict";


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\BACKEND\SRC\INDEX.TS CODE IS BELOW


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\BACKEND\TSCONFIG.JSON CODE IS BELOW
{
  "compilerOptions": {
    "target": "es6",
    "module": "commonjs",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "noImplicitAny": true,
    "outDir": "./out"
  }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\INDEX.CSS CODE IS BELOW
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\INDEX.TSX CODE IS BELOW
import 'bootstrap/dist/css/bootstrap.min.css';
import './index.css';
import React from 'react';
import ReactDOM from 'react-dom';
import App from './componentes/App'

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\IO\ENTRADA.TS CODE IS BELOW
import promptSync from "prompt-sync";
export default class Entrada {
    public receberNumero(mensagem: string): number {
        let prompt = promptSync();
        let valor = prompt(mensagem)
        let numero  = new Number(valor)
        return numero.valueOf()
    }
    public receberTexto(mensagem: string): string {
        let prompt = promptSync();
        let texto = prompt(mensagem)
        return texto
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\LOGO.SVG CODE IS BELOW
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\CLIENTE.JS CODE IS BELOW
var Cliente = /** @class */ (function () {
    function Cliente(nome, nomeSocial, cpf) {
        this.nome = nome;
        this.nomeSocial = nomeSocial;
        this.cpf = cpf;
        this.rgs = [];
        this.dataCadastro = new Date();
        this.telefones = [];
        this.produtosConsumidos = [];
        this.servicosConsumidos = [];
        this.pets = [];
    }
    Object.defineProperty(Cliente.prototype, "getCpf", {
        get: function () {
            return this.cpf;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Cliente.prototype, "getRgs", {
        get: function () {
            return this.rgs;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Cliente.prototype, "getDataCadastro", {
        get: function () {
            return this.dataCadastro;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Cliente.prototype, "getTelefones", {
        get: function () {
            return this.telefones;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Cliente.prototype, "getProdutosConsumidos", {
        get: function () {
            return this.produtosConsumidos;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Cliente.prototype, "getServicosConsumidos", {
        get: function () {
            return this.servicosConsumidos;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Cliente.prototype, "getPets", {
        get: function () {
            return this.pets;
        },
        enumerable: false,
        configurable: true
    });
    return Cliente;
}());
export default Cliente;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\CLIENTE.TS CODE IS BELOW
import CPF from "./cpf"
import Pet from "./pet"
import Produto from "./produto"
import RG from "./rg"
import Servico from "./servico"
import Telefone from "./telefone"

export default class Cliente {
    public nome: string
    public nomeSocial: string
    private cpf: CPF
    private rgs: Array<RG>
    private dataCadastro: Date
    private telefones: Array<Telefone>
    private produtosConsumidos: Array<Produto>
    private servicosConsumidos: Array<Servico>
    private pets: Array<Pet>
    constructor(nome: string, nomeSocial: string, cpf: CPF) {
        this.nome = nome
        this.nomeSocial = nomeSocial
        this.cpf = cpf
        this.rgs = []
        this.dataCadastro = new Date()
        this.telefones = []
        this.produtosConsumidos = []
        this.servicosConsumidos = []
        this.pets = []
    }
    public get getCpf(): CPF {
        return this.cpf
    }
    public get getRgs(): Array<RG> {
        return this.rgs
    }
    public get getDataCadastro(): Date {
        return this.dataCadastro
    }
    public get getTelefones(): Array<Telefone> {
        return this.telefones
    }
    public get getProdutosConsumidos(): Array<Produto> {
        return this.produtosConsumidos
    }
    public get getServicosConsumidos(): Array<Servico> {
        return this.servicosConsumidos
    }
    public get getPets(): Array<Pet>{
        return this.pets
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\CPF.JS CODE IS BELOW
var CPF = /** @class */ (function () {
    function CPF(valor, dataEmissao) {
        this.valor = valor;
        this.dataEmissao = dataEmissao;
    }
    Object.defineProperty(CPF.prototype, "getValor", {
        get: function () {
            return this.valor;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CPF.prototype, "getDataEmissao", {
        get: function () {
            return this.dataEmissao;
        },
        enumerable: false,
        configurable: true
    });
    return CPF;
}());
export default CPF;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\CPF.TS CODE IS BELOW
export default class CPF {
    private valor: string
    private dataEmissao: Date
    constructor(valor: string, dataEmissao: Date) {
        this.valor = valor
        this.dataEmissao = dataEmissao
    }
    public get getValor(): string {
        return this.valor
    }
    public get getDataEmissao(): Date {
        return this.dataEmissao
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\EMPRESA.TS CODE IS BELOW
import Cliente from "./cliente";
import Produto from "./produto";
import Servico from "./servico";
import Pet from "./pet";

export default class Empresa {
    private clientes: Array<Cliente>;
    private produtos: Array<Produto>;
    private servicos: Array<Servico>;
    private pets: Array<Pet>;

    constructor() {
        this.clientes = [];
        this.produtos = [];
        this.servicos = [];
        this.pets = [];
    }

    public get getClientes() {
        return this.clientes;
    }

    public get getProdutos() {
        return this.produtos;
    }

    public get getServicos() {
        return this.servicos;
    }

    public get getPets() {
        return this.pets;
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\PET.JS CODE IS BELOW
var Pet = /** @class */ (function () {
    function Pet(nome, raca, genero, tipo) {
        this.nome = nome;
        this.raca = raca;
        this.genero = genero;
        this.tipo = tipo;
    }
    Object.defineProperty(Pet.prototype, "getNome", {
        get: function () { return this.nome; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Pet.prototype, "getRaca", {
        get: function () { return this.raca; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Pet.prototype, "getGenero", {
        get: function () { return this.genero; },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Pet.prototype, "getTipo", {
        get: function () { return this.tipo; },
        enumerable: false,
        configurable: true
    });
    return Pet;
}());
export default Pet;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\PET.TS CODE IS BELOW
export default class Pet {
    public nome: string
    public tipo: string
    public raca: string
    public genero: string

    constructor(nome: string, raca: string, genero: string, tipo: string) {
        this.nome = nome
        this.raca = raca
        this.genero = genero
        this.tipo = tipo
    }

    public get getNome(){return this.nome}
    public get getRaca(){return this.raca}
    public get getGenero(){return this.genero}
    public get getTipo(){return this.tipo}
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\PRODUTO.JS CODE IS BELOW
var Produto = /** @class */ (function () {
    function Produto(nome, preco) {
        this.nome = nome;
        this.preco = preco;
        this.consumoCount = 0;
    }
    return Produto;
}());
export default Produto;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\PRODUTO.TS CODE IS BELOW
export default class Produto {
    public nome: string;
    public preco: number;
    public consumoCount: number;

    constructor(nome: string, preco: number) {
        this.nome = nome;
        this.preco = preco;
        this.consumoCount = 0; 
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\RG.JS CODE IS BELOW
var RG = /** @class */ (function () {
    function RG(valor, dataEmissao) {
        this.valor = valor;
        this.dataEmissao = dataEmissao;
    }
    Object.defineProperty(RG.prototype, "getValor", {
        get: function () {
            return this.valor;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RG.prototype, "getDataEmissao", {
        get: function () {
            return this.dataEmissao;
        },
        enumerable: false,
        configurable: true
    });
    return RG;
}());
export default RG;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\RG.TS CODE IS BELOW
export default class RG {
    private valor: string
    private dataEmissao: Date
    constructor(valor: string, dataEmissao: Date) {
        this.valor = valor
        this.dataEmissao = dataEmissao
    }
    public get getValor(): string {
        return this.valor
    }
    public get getDataEmissao(): Date {
        return this.dataEmissao
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\SERVICO.JS CODE IS BELOW
var Servico = /** @class */ (function () {
    function Servico(nome, preco) {
        this.nome = nome;
        this.preco = preco;
        this.consumoCount = 0;
    }
    return Servico;
}());
export default Servico;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\SERVICO.TS CODE IS BELOW
export default class Servico {
    public nome: string;
    public preco: number;
    public consumoCount: number;

    constructor(nome: string, preco: number) {
        this.nome = nome;
        this.preco = preco;
        this.consumoCount = 0;
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\TELEFONE.JS CODE IS BELOW
var Telefone = /** @class */ (function () {
    function Telefone(ddd, numero) {
        this.ddd = ddd;
        this.numero = numero;
    }
    Object.defineProperty(Telefone.prototype, "getDdd", {
        get: function () {
            return this.ddd;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Telefone.prototype, "getNumero", {
        get: function () {
            return this.numero;
        },
        enumerable: false,
        configurable: true
    });
    return Telefone;
}());
export default Telefone;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\MODELO\TELEFONE.TS CODE IS BELOW
export default class Telefone {
    private ddd: string
    private numero: string
    constructor(ddd: string, numero: string) {
        this.ddd = ddd
        this.numero = numero
    }

    public get getDdd(): string {
        return this.ddd
    }

    public get getNumero(): string {
        return this.numero
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\CADASTRO.TS CODE IS BELOW
export default abstract class Cadastro {
    public abstract cadastrar(): void
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\CADASTROCLIENTE.TS CODE IS BELOW
import Entrada from "../io/entrada";
import Cliente from "../modelo/cliente";
import CPF from "../modelo/cpf";
import Cadastro from "./cadastro";

export default class CadastroCliente extends Cadastro {
    private clientes: Array<Cliente>;
    private entrada: Entrada;

    constructor(clientes: Array<Cliente>) {
        super();
        this.clientes = clientes;
        this.entrada = new Entrada();
    }

    public cadastrar(): void {
        console.log(`\nInício do cadastro do cliente`);

        let nome = this.entrada.receberTexto(`Por favor informe o nome do cliente: `);
        let nomeSocial = this.entrada.receberTexto(`Por favor informe o nome social do cliente: `);
        let valor = this.receberCpf();
        let dataEmissao = this.receberData();

        const cpf = new CPF(valor, dataEmissao);
        const cliente = new Cliente(nome, nomeSocial, cpf);
        this.clientes.push(cliente);
        console.log(`\nCadastro concluído :)\n`);
    }

    private receberCpf(): string {
        let valor: string;
        while (true) {
            valor = this.entrada.receberTexto(`Por favor informe o número do CPF: `);
            if (this.validarCPF(valor)) {
                return valor;
            } else {
                console.error("Informe um CPF válido.");
            }
        }
    }

    private receberData(): Date {
        let data: string;
        while (true) {
            data = this.entrada.receberTexto(`Por favor informe a data de emissão do CPF, no padrão dd/mm/yyyy: `);
            let partesData = data.split('/');
            if (partesData.length === 3) {
                let dia = Number(partesData[0]);
                let mes = Number(partesData[1]) - 1;
                let ano = Number(partesData[2]);
                let dataEmissao = new Date(ano, mes, dia);

                // Verificando se a data é válida
                if (dataEmissao.getFullYear() === ano && dataEmissao.getMonth() === mes && dataEmissao.getDate() === dia) {
                    return dataEmissao;
                }
            }
            console.error("Data de emissão inválida. Utilize o padrão dd/mm/yyyy.");
        }
    }

    
    private validarCPF(cpf: string): boolean {
        return cpf.length === 11 && !isNaN(Number(cpf));
    }
}


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\CADASTROPET.TS CODE IS BELOW
import Entrada from "../io/entrada";
import Pet from "../modelo/pet";
import Cadastro from "./cadastro";

export default class CadastroPet extends Cadastro {
    private pets: Array<Pet>;
    private entrada: Entrada;

    constructor(pets: Array<Pet>) {
        super();
        this.pets = pets;
        this.entrada = new Entrada();
    }

    public cadastrar(): void {
        console.log(`\nInício do cadastro do pet`);
        let nome = this.entrada.receberTexto(`Por favor informe o nome do pet: `);
        let raca = this.entrada.receberTexto(`Por favor informe a raça do pet: `);
        let genero = this.entrada.receberTexto(`Por favor informe o gênero do pet: `);
        let tipo = this.entrada.receberTexto(`Por favor informe o tipo do pet (ex: cão, gato, etc.): `);

        let pet = new Pet(nome, raca, genero, tipo);
        this.pets.push(pet);
        console.log(`\nCadastro do pet concluído :)\n`);
    }
}


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\CADASTROPRODUTO.TS CODE IS BELOW
import Entrada from "../io/entrada";
import Produto from "../modelo/produto";
import Cadastro from "./cadastro";

export default class CadastroProduto extends Cadastro {
    private produtos: Array<Produto>;
    private entrada: Entrada;

    constructor(produtos: Array<Produto>) {
        super();
        this.produtos = produtos;
        this.entrada = new Entrada();
    }

    public cadastrar(): void {
        console.log(`\nInício do cadastro do produto`);
        let nome = this.entrada.receberTexto(`Por favor informe o nome do produto: `);
        let preco = this.entrada.receberNumero(`Por favor informe o preço do produto: `);

        let produto = new Produto(nome, preco);
        this.produtos.push(produto);
        console.log(`\nCadastro do produto concluído :)\n`);
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\LISTAGEM.TS CODE IS BELOW
export default abstract class Listagem {
    public abstract listar(): void
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\LISTAGEMCLIENTES.TS CODE IS BELOW
import Cliente from "../modelo/cliente";
import Listagem from "./listagem";

export default class ListagemClientes extends Listagem {
    private clientes: Array<Cliente>;

    constructor(clientes: Array<Cliente>) {
        super();
        this.clientes = clientes;
    }

    public listar(): void {
        console.log(`\nLista de todos os clientes:`);

        if (this.clientes.length === 0) {
            console.log("Nenhum cliente cadastrado.");
            return;
        }

        this.clientes.forEach(cliente => {
            console.log(`Nome: ` + cliente.nome);
            console.log(`Nome social: ` + cliente.nomeSocial);
            console.log(`CPF: ` + cliente.getCpf.getValor);
            console.log(`--------------------------------------`);
        });
        console.log(`\n`);
    }

    public listarTop10Clientes(): void {
        // Criando um objeto para contar o total de consumos por cliente
        const consumoPorCliente: {[key: string]: number} = {};

        this.clientes.forEach(cliente => {
            const totalConsumo = cliente.getProdutosConsumidos.length + cliente.getServicosConsumidos.length;
            consumoPorCliente[cliente.nome] = totalConsumo;
        });

        // Convertendo o objeto em um array e ordenando
        const clientesOrdenados = Object.entries(consumoPorCliente)
            .sort((a, b) => b[1] - a[1]) // ordenando por total de consumos em ordem decrescente
            .slice(0, 10); // selecionando os 10 primeiros

        console.log(`\nTop 10 Clientes que mais consumiram:`);
        if (clientesOrdenados.length === 0) {
            console.log("Nenhum consumo registrado.");
            return;
        }

        clientesOrdenados.forEach((cliente) => {
            console.log(`Cliente: ${cliente[0]}, Total de Consumos: ${cliente[1]}`);
        });

        console.log(`\n`);
    }
    public listarTop5ClientesPorValor(): void {
        console.log(`\nTop 5 Clientes que mais consumiram em valor:`);
    
        const valorGastoPorCliente: { [key: string]: number } = {};
    
        // Calcular o total gasto por cliente
        this.clientes.forEach(cliente => {
            const totalGasto = cliente.getProdutosConsumidos.reduce((total, produto) => total + produto.preco, 0) +
                               cliente.getServicosConsumidos.reduce((total, servico) => total + servico.preco, 0);
            valorGastoPorCliente[cliente.nome] = totalGasto;
        });
    
        // Ordenar clientes pelo valor gasto
        const clientesOrdenados = Object.entries(valorGastoPorCliente)
            .sort((a, b) => b[1] - a[1]) // ordem decrescente
            .slice(0, 5); // Selecionar os 5 primeiros
    
        if (clientesOrdenados.length === 0) {
            console.log("Nenhum consumo registrado.");
            return;
        }
    
        clientesOrdenados.forEach(cliente => {
            console.log(`Cliente: ${cliente[0]}, Total Gasto: R$ ${cliente[1].toFixed(2)}`);
        });
    
        console.log(`\n`);
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\LISTAGEMCONSUMO.TS CODE IS BELOW
import Produto from "../modelo/produto";
import Servico from "../modelo/servico";
import Cliente from "../modelo/cliente";

export default class ListagemConsumo {
    private produtos: Array<Produto>;
    private servicos: Array<Servico>;
    private clientes: Array<Cliente>;

    constructor(clientes: Array<Cliente>, produtos: Array<Produto>, servicos: Array<Servico>) {
        this.clientes = clientes;
        this.produtos = produtos;
        this.servicos = servicos;
    }

    public listarProdutosMaisConsumidos(): void {
        console.log(`\nProdutos mais consumidos:`);

        const produtosOrdenados = this.produtos.sort((a, b) => b.consumoCount - a.consumoCount);

        if (produtosOrdenados.length === 0) {
            console.log("Nenhum produto cadastrado.");
            return;
        }

        produtosOrdenados.forEach(produto => {
            console.log(`Produto: ${produto.nome}, Consumo: ${produto.consumoCount} vezes`);
        });
    }

    public listarServicosMaisConsumidos(): void {
        console.log(`\nServiços mais consumidos:`);

        const servicosOrdenados = this.servicos.sort((a, b) => b.consumoCount - a.consumoCount);
        
        if (servicosOrdenados.length === 0) {
            console.log("Nenhum serviço cadastrado.");
            return;
        }

        servicosOrdenados.forEach(servico => {
            console.log(`Serviço: ${servico.nome}, Consumo: ${servico.consumoCount} vezes`);
        });
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\LISTAGEMPETS.TS CODE IS BELOW
import Pet from "../modelo/pet";
import Listagem from "./listagem";

export default class ListagemPets extends Listagem {
    private pets: Array<Pet>;

    constructor(pets: Array<Pet>) {
        super();
        this.pets = pets;
    }

    public listar(): void {
        console.log(`\nLista de todos os pets:`);

        if (this.pets.length === 0) {
            console.log("Nenhum pet cadastrado.");
            return;
        }

        this.pets.forEach(pet => {
            console.log(`Nome: ${pet.getNome}`);
            console.log(`Raça: ${pet.getRaca}`);
            console.log(`Gênero: ${pet.getGenero}`);
            console.log(`Tipo: ${pet.getTipo}`);
            console.log(`--------------------------------------`);
        });
        console.log(`\n`);
    }
}


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\LISTAGEMPRODUTOS.TS CODE IS BELOW
import Produto from "../modelo/produto";
import Listagem from "./listagem";

export default class ListagemProdutos extends Listagem {
    private produtos: Array<Produto>;

    constructor(produtos: Array<Produto>) {
        super();
        this.produtos = produtos;
    }

    public listar(): void {
        console.log(`\nLista de todos os produtos:`);

        if (this.produtos.length === 0) {
            console.log("Nenhum produto cadastrado.");
            return;
        }

        this.produtos.forEach(produto => {
            console.log(`Nome: ${produto.nome}`);
            console.log(`Preço: ${produto.preco}`);
            console.log(`--------------------------------------`);
        });
        console.log(`\n`);
    }
}

C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\NEGOCIO\REGISTROCONSUMO.TS CODE IS BELOW
import Cliente from "../modelo/cliente";
import Produto from "../modelo/produto";
import Servico from "../modelo/servico";

export default class RegistroConsumo {
    private cliente: Cliente;

    constructor(cliente: Cliente) {
        this.cliente = cliente;
    }

    public registrarProduto(produto: Produto): void {
        this.cliente.getProdutosConsumidos.push(produto);
        produto.consumoCount++;
        console.log(`Produto "${produto.nome}" registrado ao cliente.`);
    }
    
    public registrarServico(servico: Servico): void {
        this.cliente.getServicosConsumidos.push(servico);
        servico.consumoCount++;
        console.log(`Serviço "${servico.nome}" registrado ao cliente.`);
    }
}


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\REACT-APP-ENV.D.TS CODE IS BELOW
/// <reference types="react-scripts" />


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\REPORTWEBVITALS.TS CODE IS BELOW
import { ReportHandler } from 'web-vitals';

const reportWebVitals = (onPerfEntry?: ReportHandler) => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\SRC\SETUPTESTS.TS CODE IS BELOW
// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';


C:\USERS\BIEL_\LISTA_TECNICAS_DSM2\ATV4\FRONTEND\TSCONFIG.JSON CODE IS BELOW
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": false,
    "jsx": "react-jsx",
    "outDir": "./out"
  },
  "include": [
    "src"
  ]
}

